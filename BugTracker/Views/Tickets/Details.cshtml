@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Details";
}

<div class="col-md-8 subnav">
    <h1>Ticket: @Model.Title</h1>
</div>
<div class="col-md-4 subnav">
    <div class="admin-btns">
@if (!Model.Status.ToString().Equals("Closed"))
{
    if (ViewContext.HttpContext.User.IsInRole("Project Manager"))
    {
        @Html.ActionLink("Assign User", "AssignUser", new { id = Model.Id }, new { @class = "action-btn" })
        @Html.ActionLink("Close", "Close", new { id = Model.Id }, new { @class = "action-btn" })
    }
    if (ViewBag.UserId == Model.AssigneeId || ViewBag.UserId == Model.OwnerId || ViewContext.HttpContext.User.IsInRole("Project Manager"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "action-btn" })
    }

    if (ViewContext.HttpContext.User.IsInRole("Developer") && ViewBag.UserId == Model.AssigneeId && !Model.Status.ToString().Equals("Resolved"))
    {
        @Html.ActionLink("Resolve", "Resolve", new { id = Model.Id }, new { @class = "action-btn" })
    }
}

    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h3>Project: @Html.ActionLink(Model.Project.Title, "Details", "Projects", new { id = Model.ProjectId }, null)</h3>
            <h3>Created by @Model.Owner.FullName on @Model.Created.ToString("MMMM dd, yyyy h:mm t")M</h3>
            @if (Model.Modified.HasValue)
            {
                <h4 class="text-danger">Updated on @Model.Modified.Value.ToString("MMMM dd, yyyy h:mm t")M - @Html.ActionLink("View History", "History", new { id = Model.Id })</h4>
            }
            @if (Model.Assignee != null)
            {
            <h3>Assigned to @Model.Assignee.FullName</h3>
            }
            else
            {
                <h3>Assigned to: <span class="text-danger">Unassigned</span></h3>
            }
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Type</th>
                            <th>Priority</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@Model.Type.Name</td>
                            <td>@Model.Priority</td>
                            <td>@Model.Status</td>
                        </tr>
                    </tbody>
                </table>

                <p>@Model.Body</p>
            </div>
    
        </div>

    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <h3 class="attachment">Comments</h3>
                </div>
                <div class="col-md-6">
                    @if (!Model.Status.ToString().Equals("Closed"))
                    {
                    @Html.ActionLink("New Comment", "AddComment", new { id = Model.Id }, new { @class = "btn btn-default" })
                    }
                </div>
            </div>
            @{ var comments = Model.Comments; }
            @foreach (var comment in comments)
            {
                <div class="comment">
                    <h4>Posted by @comment.Author.FullName on @comment.Date.ToString("M/d/yy h:mm t")M</h4>
                    <p>@comment.Content</p>
                    @if (ViewBag.UserId == @comment.AuthorId || ViewContext.HttpContext.User.IsInRole("Project Manager") || ViewContext.HttpContext.User.IsInRole("Admin"))
                    {
                        using (Html.BeginForm("DeleteComment", "Tickets", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this comment?')" }))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="Id" value="@comment.Id" />
                            <input type="hidden" name="TicketId" value="@comment.TicketId" />
                            <div class="form-group comment-btn-delete">
                                <input type="submit" value="Delete" class="delete" />
                            </div>
                        }
                    }
                </div>
            }
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-6">
                    <h3 class="attachment">Attachments</h3>
                </div>
                <div class="col-md-6">
                    @if (!Model.Status.ToString().Equals("Closed"))
                    {
                        @Html.ActionLink("New Attachment", "AddAttachment", new { id = Model.Id }, new { @class = "btn btn-default" })
                    }
                </div>
            </div>
            @{ var attachments = Model.Attachments; }
            @foreach (var attachment in attachments)
            {
                <div class="col-md-6">
                    @if (attachment.MediaURL.Contains(".pdf") || attachment.MediaURL.Contains(".doc"))
                    {
                        <p>
                            <a href="@attachment.MediaURL"><img src="~/Content/Images/document.png" class="img-responsive"></a>
                        </p>
                    }
                    else {
                        <p><a href="@attachment.MediaURL"><img class="img-responsive" src="@attachment.MediaURL"></a></p>
                    }
                </div>
                <div class="col-md-6">
                    <p>@attachment.Description</p>
                    @if(@attachment.AuthorId != null) {<p class="author">Posted by @attachment.Author.FullName</p>}
                </div>
                <div class="col-md-12">
                    @if (ViewBag.UserId == @attachment.AuthorId || ViewContext.HttpContext.User.IsInRole("Project Manager") || ViewContext.HttpContext.User.IsInRole("Admin"))
                    {

                    using (Html.BeginForm("DeleteAttachment", "Tickets", FormMethod.Post, new { onsubmit = "return confirm('Are you sure you want to delete this attachment?')" }))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="Id" value="@attachment.Id" />
                            <input type="hidden" name="TicketId" value="@attachment.TicketId" />
                            <div class="form-group comment-btn-delete">
                                <input type="submit" value="Delete" class="delete" />
                            </div>
                    }
            }
             </div>
            }
        </div>

    </div>
</div>
